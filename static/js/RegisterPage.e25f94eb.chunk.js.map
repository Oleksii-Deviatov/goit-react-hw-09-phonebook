{"version":3,"sources":["components/RegisterPage/RegisterPage.jsx"],"names":["mapDispatchToProps","onRegister","operations","connect","getError","useState","inputName","setInputName","inputEmain","setInputEmain","inputPassword","setInputPassword","Container","maxWidth","onSubmit","e","preventDefault","name","email","password","autoComplete","Box","display","flexDirection","TextField","label","value","onChange","target","margin","required","type","Button","variant","color"],"mappings":"8QA+EA,IAAMA,EAAqB,CACzBC,WAAYC,KAGCC,cAAQ,KAAMH,EAAdG,EA5Ef,YAAiD,IAAzBF,EAAwB,EAAxBA,WAAwB,KAAZG,SACAC,mBAAS,KADG,mBACvCC,EADuC,KAC5BC,EAD4B,OAEVF,mBAAS,IAFC,mBAEvCG,EAFuC,KAE3BC,EAF2B,OAGJJ,mBAAS,IAHL,mBAGvCK,EAHuC,KAGxBC,EAHwB,KAiC9C,OACE,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,sBAAMC,SAlBV,SAAuBC,GACrBA,EAAEC,iBAQFf,EANiB,CACfgB,KAAMX,EACNY,MAAOV,EACPW,SAAUT,KAYqBU,aAAa,MAA5C,SACE,eAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAlC,UACE,cAACC,EAAA,EAAD,CACEC,MAAM,OACNC,MAAOpB,EACPqB,SAnCV,YAAkD,IAAZD,EAAW,EAArBE,OAAUF,MACpCnB,EAAamB,IAmCLG,OAAO,QACPC,UAAQ,IAEV,cAACN,EAAA,EAAD,CACEC,MAAM,SACNC,MAAOlB,EACPmB,SAtCV,YAAoD,IAAZD,EAAW,EAArBE,OAAUF,MACtCjB,EAAciB,IAsCNG,OAAO,QACPC,UAAQ,IAEV,cAACN,EAAA,EAAD,CACEC,MAAM,WACNC,MAAOhB,EACPiB,SAzCV,YAAsD,IAAZD,EAAW,EAArBE,OAAUF,MACxCf,EAAiBe,IAyCTG,OAAO,QACPE,KAAK,WACLD,UAAQ,IAEV,cAACE,EAAA,EAAD,CAAQC,QAAQ,WAAWF,KAAK,SAASG,MAAM,UAA/C","file":"static/js/RegisterPage.e25f94eb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { TextField, Button, Box, Container } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport * as operations from '../../redux/auth/auth-operations';\n// import { getError } from '../../redux/auth/auth-selectors';\n// import { toast } from 'react-toastify';\n\nfunction RegisterPage({ onRegister, getError }) {\n  const [inputName, setInputName] = useState('');\n  const [inputEmain, setInputEmain] = useState('');\n  const [inputPassword, setInputPassword] = useState('');\n\n  function inputNameHandler({ target: { value } }) {\n    setInputName(value);\n  }\n\n  function inputNumberHendler({ target: { value } }) {\n    setInputEmain(value);\n  }\n\n  function inputPasswordHendler({ target: { value } }) {\n    setInputPassword(value);\n  }\n\n  function submitHendler(e) {\n    e.preventDefault();\n\n    const userData = {\n      name: inputName,\n      email: inputEmain,\n      password: inputPassword,\n    };\n\n    onRegister(userData);\n\n    // if (!getError) {\n    //   toast.info('Successfully registered');\n    // }\n  }\n\n  return (\n    <Container maxWidth=\"xs\">\n      <form onSubmit={submitHendler} autoComplete=\"off\">\n        <Box display=\"flex\" flexDirection=\"column\">\n          <TextField\n            label=\"Name\"\n            value={inputName}\n            onChange={inputNameHandler}\n            margin=\"dense\"\n            required\n          />\n          <TextField\n            label=\"E-Mail\"\n            value={inputEmain}\n            onChange={inputNumberHendler}\n            margin=\"dense\"\n            required\n          />\n          <TextField\n            label=\"PassWord\"\n            value={inputPassword}\n            onChange={inputPasswordHendler}\n            margin=\"dense\"\n            type=\"password\"\n            required\n          />\n          <Button variant=\"outlined\" type=\"submit\" color=\"primary\">\n            Register\n          </Button>\n        </Box>\n      </form>\n    </Container>\n  );\n}\n\n// const mapStateToProps = state => ({\n//   getError: getError(state),\n// });\n\nconst mapDispatchToProps = {\n  onRegister: operations.register,\n};\n\nexport default connect(null, mapDispatchToProps)(RegisterPage);\n"],"sourceRoot":""}