{"version":3,"sources":["components/Contact/styles.module.css","redux/contacts/contacts-selectors.js","redux/contacts/contacts-operations.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ModalWindow/ModalWindow.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Home/Home.jsx"],"names":["module","exports","getFilter","state","contacts","filter","getAllContacts","getLoading","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","fetchContacts","dispatch","a","actions","axios","get","data","connect","addContact","value","post","then","catch","error","useState","inputName","setInputName","inputNumber","setInputNumber","onSubmit","e","preventDefault","toast","find","number","info","autoComplete","Box","display","flexDirection","TextField","label","onChange","target","margin","Button","variant","type","color","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","top","left","transform","btn","marginTop","changeContact","id","update","patch","message","operations","onClose","modalProps","classes","Modal","className","flexWrap","delContact","delete","open","setOpen","ListItem","disableGutters","Card","styles","card","CardActionArea","CardContent","justifyContent","IconButton","component","onClick","handleDelet","useEffect","List","map","Contact","isLoading","Container","maxWidth","Spinner","Typography","align","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,KAAO,uB,+ICCnBC,EAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASC,QAEpCC,EAAiB,SAAAH,GAAK,OAAIA,EAAMC,SAASA,UAEzCG,EAAa,SAAAJ,GAAK,OAAIA,EAAMC,SAASI,SAErCC,EAAqBC,YACzB,CAACJ,EAAgBJ,IACjB,SAACE,EAAUC,GACT,IAAMM,EAAmBN,EAAOO,cAEhC,OAAOR,EAASC,QAAO,qBAAGQ,KACnBD,cAAcE,SAASH,S,kDCX5BI,EAAgB,yDAAM,WAAMC,GAAN,iBAAAC,EAAA,6DAC1BD,EAASE,OADiB,kBAIDC,IAAMC,IAAI,aAJT,gBAIhBC,EAJgB,EAIhBA,KAERL,EAASE,IAA6BG,IANd,gDAQxBL,EAASE,IAAA,OARe,yDAAN,uD,yBC2EtB,IAYeI,eAZS,SAAAnB,GACtB,MAAO,CACLC,SAAUE,EAAeH,OAIF,SAAAa,GACzB,MAAO,CACLO,WAAY,SAAAF,GAAI,OAAIL,GDvELQ,ECuEoCH,EDvE3B,SAAAL,GAC1BA,EAASE,OAETC,IACGM,KAAK,YAAaD,GAClBE,MAAK,gBAAGL,EAAH,EAAGA,KAAH,OAAcL,EAASE,IAA2BG,OACvDM,OAAM,SAAAC,GAAK,OAAIZ,EAASE,IAAwBU,UANlC,IAAAJ,MC2EJF,EAlFf,YAAgD,IAAzBlB,EAAwB,EAAxBA,SAAUmB,EAAc,EAAdA,WAAc,EACXM,mBAAS,IADE,mBACtCC,EADsC,KAC3BC,EAD2B,OAEPF,mBAAS,IAFF,mBAEtCG,EAFsC,KAEzBC,EAFyB,KA+C7C,OACE,sBAAMC,SA/BR,SAAuBC,GASrB,OARAA,EAAEC,kBAQM,GACN,IAAmB,KAAdN,EAEH,YADAO,IAAMT,MAAM,yBAGd,IAAqB,KAAhBI,EAEH,YADAK,IAAMT,MAAM,2BAGd,MAdSxB,EAASkC,MAChB,qBAAGzB,KAAgBD,gBAAkBkB,EAAUlB,iBAe/C,YADAyB,IAAMT,MAAN,UAAeE,EAAf,mBAGF,QACEP,EAAW,CAAEV,KAAMiB,EAAWS,OAAQP,IACtCK,IAAMG,KAAN,UAAcV,EAAd,WA5BJC,EAAa,IACbE,EAAe,MAkCgBQ,aAAa,MAA5C,SACE,eAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAlC,UACE,cAACC,EAAA,EAAD,CACEC,MAAM,OACNtB,MAAOM,EACPiB,SAjDR,YAAkD,IAAZvB,EAAW,EAArBwB,OAAUxB,MACpCO,EAAaP,IAiDPyB,OAAO,UAET,cAACJ,EAAA,EAAD,CACEC,MAAM,SACNtB,MAAOQ,EACPe,SAnDR,YAAoD,IAAZvB,EAAW,EAArBwB,OAAUxB,MACtCS,EAAeT,IAmDTyB,OAAO,UAET,cAACC,EAAA,EAAD,CAAQC,QAAQ,WAAWC,KAAK,SAASC,MAAM,UAA/C,iCC9CR,IAYe/B,eAZS,SAAAnB,GACtB,MAAO,CACLqB,MAAOtB,EAAUC,OAIM,SAAAa,GACzB,MAAO,CACL+B,SAAU,SAAAvB,GAAK,OAAIR,EAASE,IAAqBM,QAItCF,EA/Bf,YAAsC,IAApByB,EAAmB,EAAnBA,SAAUvB,EAAS,EAATA,MAK1B,OACE,sBAAMiB,aAAa,MAAnB,SACE,cAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAlC,SACE,cAACC,EAAA,EAAD,CACEC,MAAM,uBACNtB,MAAOA,EACPuB,SAVR,YAAoD,IAAZvB,EAAW,EAArBwB,OAAUxB,MACtCuB,EAASvB,IAUHyB,OAAO,iB,qICTXK,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,MAAO,CACLC,SAAU,WACVC,MAAO,IACPC,gBAAiBJ,EAAMK,QAAQC,WAAWL,MAC1CM,UAAWP,EAAMQ,QAAQ,GACzBC,QAAST,EAAMU,QAAQ,EAAG,EAAG,GAC7BC,IAAI,MACJC,KAAK,MACLC,UAAU,yBAGZC,IAAK,CACHX,MAAO,OACPY,UAAW,QA0GAjD,eAbS,SAAAnB,GACtB,MAAO,CACLC,SAAUE,EAAeH,OAIF,SAAAa,GACzB,MAAO,CACLwD,cAAe,SAAAnD,GAAI,OAAIL,EH1FL,SAAC,GAAD,IAAGyD,EAAH,EAAGA,GAAI5D,EAAP,EAAOA,KAAM0B,EAAb,EAAaA,OAAb,OAA0B,SAAAvB,GAC9C,IAAM0D,EAAS,CAAE7D,OAAM0B,UAEvBvB,EAASE,OAETC,IACGwD,MADH,oBACsBF,GAAMC,GACzBhD,MAAK,gBAAGL,EAAH,EAAGA,KAAH,OAAcL,EAASE,IAA6BG,OACzDM,OAAM,SAAAC,GAAK,OAAIZ,EAASE,IAA2BU,EAAMgD,cGkF1BC,CAAyBxD,KACzDN,cAAe,kBAAMC,EAAS6D,SAInBvD,EAtGK,SAAC,GASd,IARLlB,EAQI,EARJA,SACAqE,EAOI,EAPJA,GACA5D,EAMI,EANJA,KACA0B,EAKI,EALJA,OACAiC,EAII,EAJJA,cACAzD,EAGI,EAHJA,cACA+D,EAEI,EAFJA,QACGC,EACC,2FACEC,EAAU1B,IADZ,EAE8BzB,mBAAShB,GAFvC,mBAEGiB,EAFH,KAEcC,EAFd,OAGkCF,mBAASU,GAH3C,mBAGGP,EAHH,KAGgBC,EAHhB,KAgDJ,OACE,cAACgD,EAAA,EAAD,2BAAWF,GAAX,IAAuBD,QAASA,EAAhC,SACE,qBAAKI,UAAWF,EAAQvB,MAAxB,SACE,uBAAMvB,SAtCZ,SAAuBC,GASrB,OARAA,EAAEC,kBAQM,GACN,IAAmB,KAAdN,EAEH,YADAO,IAAMT,MAAM,yBAGd,IAAqB,KAAhBI,EAEH,YADAK,IAAMT,MAAM,2BAGd,KAAKE,IAAcjB,EAEjB,YADAiE,IAGF,MAlBS1E,EAASkC,MAChB,qBAAGzB,KAAgBD,gBAAkBkB,EAAUlB,iBAmB/C,YADAyB,IAAMT,MAAN,UAAeE,EAAf,mBAGF,QACE0C,EAAc,CAAEC,GAAIA,EAAI5D,KAAMiB,EAAWS,OAAQP,IACjDjB,IACAsB,IAAMG,KAAN,SACAsC,MAQ+BrC,aAAa,MAA5C,UACE,eAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOwC,SAAS,OAAOvC,cAAc,SAAlD,UACE,cAACC,EAAA,EAAD,CACEC,MAAM,OACNtB,MAAOM,EACPiB,SAnDZ,YAAkD,IAAZvB,EAAW,EAArBwB,OAAUxB,MACpCO,EAAaP,IAmDHyB,OAAO,UAET,cAACJ,EAAA,EAAD,CACEC,MAAM,SACNtB,MAAOQ,EACPe,SArDZ,YAAoD,IAAZvB,EAAW,EAArBwB,OAAUxB,MACtCS,EAAeT,IAqDLyB,OAAO,aAGX,cAACC,EAAA,EAAD,CACEgC,UAAWF,EAAQV,IACnBnB,QAAQ,WACRC,KAAK,SACLC,MAAM,UAJR,qCC1BV,IAMe/B,cAAQ,MANI,SAAAN,GACzB,MAAO,CACLoE,WAAY,SAAAX,GAAE,OAAIzD,EJrDH,SAAAyD,GAAE,OAAI,SAAAzD,GACvBA,EAASE,OAETC,IACGkE,OADH,oBACuBZ,IACpB/C,MAAK,kBAAMV,EAASE,IAA2BuD,OAC/C9C,OAAM,SAAAC,GAAK,OAAIZ,EAASE,IAAyBU,QI+CvBiD,CAAsBJ,QAItCnD,EAhEf,YAAmD,IAAjCmD,EAAgC,EAAhCA,GAAI5D,EAA4B,EAA5BA,KAAM0B,EAAsB,EAAtBA,OAAQ6C,EAAc,EAAdA,WAAc,EACxBvD,oBAAS,GADe,mBACzCyD,EADyC,KACnCC,EADmC,KAgBhD,OACE,eAACC,EAAA,EAAD,CAAUC,gBAAgB,EAA1B,UACE,cAACC,EAAA,EAAD,CAAMvC,QAAQ,WAAW+B,UAAWS,IAAOC,KAA3C,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,eAACpD,EAAA,EAAD,CAAKC,QAAQ,OAAOoD,eAAe,gBAAnC,UACE,8BACGlF,EADH,KACW0B,KAEX,gCACE,cAACyD,EAAA,EAAD,CACE3C,MAAM,UACN4C,UAAU,OACVC,QA1BG,SAAA/D,GACjBoD,GAAQ,IAsBI,SAKE,cAAC,IAAD,MAEF,cAACS,EAAA,EAAD,CACE3C,MAAM,UACN4C,UAAU,OACVC,QAAS,kBAzBzB,SAAqBzB,GACnBW,EAAWX,GACXpC,IAAMG,KAAN,UAAc3B,EAAd,aAuB6BsF,CAAY1B,IAH7B,SAKE,cAAC,IAAD,kBAOXa,GACC,cAAC,EAAD,CACEA,KAAMA,EACNR,QAzCY,WAClBS,GAAQ,IAyCF1E,KAAMA,EACN0B,OAAQA,EACRkC,GAAIA,U,SC/Cd,IAUenD,eAJS,SAAAnB,GAAK,MAAK,CAChCC,SAAUK,EAAmBN,OAPJ,SAAAa,GACzB,MAAO,CACLD,cAAe,kBAAMC,EAAS6D,SAQnBvD,EAxBf,YAAmD,IAA5BlB,EAA2B,EAA3BA,SAAUW,EAAiB,EAAjBA,cAK/B,OAJAqF,qBAAU,WACRrF,MACC,IAGD,cAACsF,EAAA,EAAD,UACGjG,EAASkG,KAAI,YAA2B,IAAxB7B,EAAuB,EAAvBA,GAAI5D,EAAmB,EAAnBA,KAAM0B,EAAa,EAAbA,OACzB,OAAO,cAACgE,EAAD,CAAkB9B,GAAIA,EAAI5D,KAAMA,EAAM0B,OAAQA,GAAhCkC,W,0BC4B7B,IAMenD,eANS,SAAAnB,GACtB,MAAO,CACLqG,UAAWjG,EAAWJ,MAIXmB,EAxCf,YAA8B,IAAdkF,EAAa,EAAbA,UACd,OACE,qCACE,eAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACGF,GAAa,cAACG,EAAA,EAAD,IAEd,cAACC,EAAA,EAAD,CAAYC,MAAM,SAAS1D,QAAQ,KAAnC,uBAGA,cAAC,EAAD,IAEA,cAACyD,EAAA,EAAD,CAAYC,MAAM,SAAS1D,QAAQ,KAAnC,sBAGA,cAAC,EAAD,IAEA,cAAC,EAAD,OAGF,cAAC,IAAD,CACEO,SAAS,YACToD,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY","file":"static/js/HomePage.76d02bde.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__2pija\"};","import { createSelector } from '@reduxjs/toolkit';\n\nconst getFilter = state => state.contacts.filter;\n\nconst getAllContacts = state => state.contacts.contacts;\n\nconst getLoading = state => state.contacts.loading;\n\nconst getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n\nexport { getFilter, getVisibleContacts, getAllContacts, getLoading };\n","import axios from 'axios';\nimport * as actions from './contacts-actions';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(actions.fetchContactsRequest());\n\n  try {\n    const { data } = await axios.get('/contacts');\n\n    dispatch(actions.fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(actions.fetchContactsError(error));\n  }\n};\n\nconst addContact = value => dispatch => {\n  dispatch(actions.addContactsRequest());\n\n  axios\n    .post('/contacts', value)\n    .then(({ data }) => dispatch(actions.addContactsSuccess(data)))\n    .catch(error => dispatch(actions.addContactError(error)));\n};\n\nconst delContact = id => dispatch => {\n  dispatch(actions.delContactsRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(actions.delContactsSuccess(id)))\n    .catch(error => dispatch(actions.delContactsError(error)));\n};\n\nconst changeContact = ({ id, name, number }) => dispatch => {\n  const update = { name, number };\n\n  dispatch(actions.changeContactRequest());\n\n  axios\n    .patch(`/contacts/${id}`, update)\n    .then(({ data }) => dispatch(actions.changeContactSuccess(data)))\n    .catch(error => dispatch(actions.changeContactError(error.message)));\n};\n\nexport { fetchContacts, addContact, delContact, changeContact };\n","import { useState } from 'react';\nimport { TextField, Button, Box } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { getAllContacts } from '../../redux/contacts/contacts-selectors';\nimport * as operations from '../../redux/contacts/contacts-operations';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction ContactForm({ contacts, addContact }) {\n  const [inputName, setInputName] = useState('');\n  const [inputNumber, setInputNumber] = useState('');\n\n  function inputNameHandler({ target: { value } }) {\n    setInputName(value);\n  }\n\n  function inputNumberHendler({ target: { value } }) {\n    setInputNumber(value);\n  }\n\n  function clrForm() {\n    setInputName('');\n    setInputNumber('');\n  }\n\n  function submitHendler(e) {\n    e.preventDefault();\n\n    function checkExistContact() {\n      return !!contacts.find(\n        ({ name }) => name.toLowerCase() === inputName.toLowerCase(),\n      );\n    }\n\n    switch (true) {\n      case inputName === '':\n        toast.error('Name can not be empty');\n        return;\n\n      case inputNumber === '':\n        toast.error('Number can not be empty');\n        return;\n\n      case checkExistContact():\n        toast.error(`${inputName} already exist`);\n        return;\n\n      default:\n        addContact({ name: inputName, number: inputNumber });\n        toast.info(`${inputName} saved`);\n        clrForm();\n        break;\n    }\n  }\n\n  return (\n    <form onSubmit={submitHendler} autoComplete=\"off\">\n      <Box display=\"flex\" flexDirection=\"column\">\n        <TextField\n          label=\"Name\"\n          value={inputName}\n          onChange={inputNameHandler}\n          margin=\"dense\"\n        />\n        <TextField\n          label=\"Number\"\n          value={inputNumber}\n          onChange={inputNumberHendler}\n          margin=\"dense\"\n        />\n        <Button variant=\"outlined\" type=\"submit\" color=\"primary\">\n          add contact\n        </Button>\n      </Box>\n    </form>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    contacts: getAllContacts(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addContact: data => dispatch(operations.addContact(data)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import { connect } from 'react-redux';\nimport { TextField, Box } from '@material-ui/core';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\nimport * as actions from '../../redux/contacts/contacts-actions';\n\nfunction Filter({ onChange, value }) {\n  function inputFilterHendler({ target: { value } }) {\n    onChange(value);\n  }\n\n  return (\n    <form autoComplete=\"off\">\n      <Box display=\"flex\" flexDirection=\"column\">\n        <TextField\n          label=\"find contact by name\"\n          value={value}\n          onChange={inputFilterHendler}\n          margin=\"dense\"\n        />\n      </Box>\n    </form>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    value: getFilter(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onChange: value => dispatch(actions.changeFilter(value)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { Box, Modal, TextField, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getAllContacts } from '../../redux/contacts/contacts-selectors';\nimport { toast } from 'react-toastify';\nimport * as operations from '../../redux/contacts/contacts-operations';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    top: `50%`,\n    left: `50%`,\n    transform: `translate(-50%, -50%)`,\n  },\n\n  btn: {\n    width: '100%',\n    marginTop: 10,\n  },\n}));\n\nconst ModalWindow = ({\n  contacts,\n  id,\n  name,\n  number,\n  changeContact,\n  fetchContacts,\n  onClose,\n  ...modalProps\n}) => {\n  const classes = useStyles();\n  const [inputName, setInputName] = useState(name);\n  const [inputNumber, setInputNumber] = useState(number);\n\n  function inputNameHandler({ target: { value } }) {\n    setInputName(value);\n  }\n\n  function inputNumberHendler({ target: { value } }) {\n    setInputNumber(value);\n  }\n\n  function submitHendler(e) {\n    e.preventDefault();\n\n    function checkExistContact() {\n      return !!contacts.find(\n        ({ name }) => name.toLowerCase() === inputName.toLowerCase(),\n      );\n    }\n\n    switch (true) {\n      case inputName === '':\n        toast.error('Name can not be empty');\n        return;\n\n      case inputNumber === '':\n        toast.error('Number can not be empty');\n        return;\n\n      case inputName === name:\n        onClose();\n        return;\n\n      case checkExistContact():\n        toast.error(`${inputName} already exist`);\n        return;\n\n      default:\n        changeContact({ id: id, name: inputName, number: inputNumber });\n        fetchContacts();\n        toast.info(`saved`);\n        onClose();\n        break;\n    }\n  }\n\n  return (\n    <Modal {...modalProps} onClose={onClose}>\n      <div className={classes.paper}>\n        <form onSubmit={submitHendler} autoComplete=\"off\">\n          <Box display=\"flex\" flexWrap=\"wrap\" flexDirection=\"column\">\n            <TextField\n              label=\"Name\"\n              value={inputName}\n              onChange={inputNameHandler}\n              margin=\"dense\"\n            />\n            <TextField\n              label=\"Number\"\n              value={inputNumber}\n              onChange={inputNumberHendler}\n              margin=\"dense\"\n            />\n          </Box>\n          <Button\n            className={classes.btn}\n            variant=\"outlined\"\n            type=\"submit\"\n            color=\"primary\"\n          >\n            edit contact\n          </Button>\n        </form>\n      </div>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    contacts: getAllContacts(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    changeContact: data => dispatch(operations.changeContact(data)),\n    fetchContacts: () => dispatch(operations.fetchContacts()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalWindow);\n","import {\n  Card,\n  CardContent,\n  IconButton,\n  Box,\n  CardActionArea,\n} from '@material-ui/core';\nimport DeleteForeverTwoToneIcon from '@material-ui/icons/DeleteForeverTwoTone';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { connect } from 'react-redux';\nimport styles from './styles.module.css';\nimport ListItem from '@material-ui/core/ListItem';\nimport * as operations from '../../redux/contacts/contacts-operations';\nimport { useState } from 'react';\nimport ModalWindow from '../ModalWindow';\nimport { toast } from 'react-toastify';\n\nfunction Conact({ id, name, number, delContact }) {\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = e => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function handleDelet(id) {\n    delContact(id);\n    toast.info(`${name} deleted`);\n  }\n\n  return (\n    <ListItem disableGutters={true}>\n      <Card variant=\"outlined\" className={styles.card}>\n        <CardActionArea>\n          <CardContent>\n            <Box display=\"flex\" justifyContent=\"space-between\">\n              <p>\n                {name}: {number}\n              </p>\n              <div>\n                <IconButton\n                  color=\"primary\"\n                  component=\"span\"\n                  onClick={handleOpen}\n                >\n                  <EditIcon />\n                </IconButton>\n                <IconButton\n                  color=\"primary\"\n                  component=\"span\"\n                  onClick={() => handleDelet(id)}\n                >\n                  <DeleteForeverTwoToneIcon />\n                </IconButton>\n              </div>\n            </Box>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n      {open && (\n        <ModalWindow\n          open={open}\n          onClose={handleClose}\n          name={name}\n          number={number}\n          id={id}\n        />\n      )}\n    </ListItem>\n  );\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    delContact: id => dispatch(operations.delContact(id)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Conact);\n","import Contact from '../Contact';\nimport { List } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\nimport { useEffect } from 'react';\nimport * as operations from '../../redux/contacts/contacts-operations';\n\nfunction ContactList({ contacts, fetchContacts }) {\n  useEffect(() => {\n    fetchContacts();\n  }, []);\n\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => {\n        return <Contact key={id} id={id} name={name} number={number} />;\n      })}\n    </List>\n  );\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchContacts: () => dispatch(operations.fetchContacts()),\n  };\n};\n\nconst mapStateToProps = state => ({\n  contacts: getVisibleContacts(state),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import ContactForm from '../ContactForm';\nimport Filter from '../Filter';\nimport ContactList from '../ContactList';\nimport Spinner from '../Spinner';\nimport { Container, Typography } from '@material-ui/core';\nimport { ToastContainer } from 'react-toastify';\nimport { connect } from 'react-redux';\nimport { getLoading } from '../../redux/contacts/contacts-selectors';\n\nfunction Home({ isLoading }) {\n  return (\n    <>\n      <Container maxWidth=\"xs\">\n        {isLoading && <Spinner />}\n\n        <Typography align=\"center\" variant=\"h2\">\n          Phonebook\n        </Typography>\n        <ContactForm />\n\n        <Typography align=\"center\" variant=\"h4\">\n          Contacts\n        </Typography>\n        <Filter />\n\n        <ContactList />\n      </Container>\n\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={2000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoading: getLoading(state),\n  };\n};\n\nexport default connect(mapStateToProps)(Home);\n"],"sourceRoot":""}