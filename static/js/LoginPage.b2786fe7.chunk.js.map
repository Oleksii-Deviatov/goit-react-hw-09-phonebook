{"version":3,"sources":["components/LoginPage/LoginPage.jsx"],"names":["mapDispatchToProps","onLogin","operations","connect","state","error","getError","useState","inputEmain","setInputEmain","inputPassword","setInputPassword","Container","maxWidth","onSubmit","e","preventDefault","email","password","toast","info","autoComplete","Box","display","flexDirection","TextField","label","value","onChange","target","margin","required","type","Button","variant","color"],"mappings":"8RAqEA,IAIMA,EAAqB,CACzBC,QAASC,KAGIC,eARS,SAAAC,GAAK,MAAK,CAChCC,MAAOC,YAASF,MAOsBJ,EAAzBG,EApEf,YAAwC,IAAnBF,EAAkB,EAAlBA,QAAkB,KAATI,MACQE,mBAAS,KADR,mBAC9BC,EAD8B,KAClBC,EADkB,OAEKF,mBAAS,IAFd,mBAE9BG,EAF8B,KAEfC,EAFe,KAgCrC,OACE,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,sBAAMC,SAtBV,SAAuBC,GACrBA,EAAEC,iBAaFf,EAXiB,CACfgB,MAAOT,EACPU,SAAUR,IAUPJ,KACHa,IAAMC,KAAK,cAMoBC,aAAa,MAA5C,SACE,eAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAlC,UACE,cAACC,EAAA,EAAD,CACEC,MAAM,SACNC,MAAOnB,EACPoB,SAnCV,YAAoD,IAAZD,EAAW,EAArBE,OAAUF,MACtClB,EAAckB,IAmCNG,OAAO,QACPC,UAAQ,IAEV,cAACN,EAAA,EAAD,CACEC,MAAM,WACNC,MAAOjB,EACPkB,SAtCV,YAAsD,IAAZD,EAAW,EAArBE,OAAUF,MACxChB,EAAiBgB,IAsCTK,KAAK,WACLF,OAAO,QACPC,UAAQ,IAEV,cAACE,EAAA,EAAD,CAAQC,QAAQ,WAAWF,KAAK,SAASG,MAAM,UAA/C","file":"static/js/LoginPage.b2786fe7.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { TextField, Button, Box } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport * as operations from '../../redux/auth/auth-operations';\nimport { Container } from '@material-ui/core';\n\nimport { getError } from '../../redux/auth/auth-selectors';\nimport { toast } from 'react-toastify';\n\nfunction LoginPage({ onLogin, error }) {\n  const [inputEmain, setInputEmain] = useState('');\n  const [inputPassword, setInputPassword] = useState('');\n\n  function inputNumberHendler({ target: { value } }) {\n    setInputEmain(value);\n  }\n\n  function inputPasswordHendler({ target: { value } }) {\n    setInputPassword(value);\n  }\n\n  function submitHendler(e) {\n    e.preventDefault();\n\n    const userData = {\n      email: inputEmain,\n      password: inputPassword,\n    };\n\n    // if (getError) {\n    //   console.log('wrong');\n    //   toast.error('Wrong email or password');\n    //   return;\n    // }\n\n    onLogin(userData);\n    if (!getError) {\n      toast.info('Logged in');\n    }\n  }\n\n  return (\n    <Container maxWidth=\"xs\">\n      <form onSubmit={submitHendler} autoComplete=\"off\">\n        <Box display=\"flex\" flexDirection=\"column\">\n          <TextField\n            label=\"E-Mail\"\n            value={inputEmain}\n            onChange={inputNumberHendler}\n            margin=\"dense\"\n            required\n          />\n          <TextField\n            label=\"PassWord\"\n            value={inputPassword}\n            onChange={inputPasswordHendler}\n            type=\"password\"\n            margin=\"dense\"\n            required\n          />\n          <Button variant=\"outlined\" type=\"submit\" color=\"primary\">\n            Login\n          </Button>\n        </Box>\n      </form>\n    </Container>\n  );\n}\n\nconst mapStateToProps = state => ({\n  error: getError(state),\n});\n\nconst mapDispatchToProps = {\n  onLogin: operations.login,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n"],"sourceRoot":""}