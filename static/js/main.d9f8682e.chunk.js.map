{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/auth/auth-reducer.js","redux/store.js","components/PrivateRoute.js","components/PublicRoute.js","App.jsx","index.js","redux/auth/auth-selectors.js","redux/auth/auth-actions.js","redux/auth/auth-operations.js","components/Spinner/Spinner.jsx","components/Spinner/styles.module.css"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactError","delContactsRequest","delContactsSuccess","delContactsError","changeContactRequest","changeContactSuccess","changeContactError","changeFilter","contacts","createReducer","actions","_","payload","state","filter","id","loading","error","combineReducers","initState","name","email","user","authActions","token","setError","isAuthenticated","isLoadingUser","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contactsReducer","auth","persistReducer","authReducer","devTools","process","persistor","persistStore","connect","getIsAuthenticated","Component","component","redirectTo","routeProps","render","props","to","restricted","NavBar","lazy","StartPage","HomePage","RegisterPage","LoginPage","mapDispatchToProps","onGetCurrentUser","authOperations","getStatusLoadingUser","useEffect","Container","maxWidth","fallback","Spinner","exact","path","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","StrictMode","document","getElementById","getUsername","getError","registrationRequest","registrationSuccess","registrationError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","noToken","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","response","data","message","login","logout","getCurrentUser","getState","persistedToken","get","className","styles","spinner","type","color","height","width","module","exports"],"mappings":"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","file":"static/js/main.d9f8682e.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction('contacts/fetchRequest');\nexport const fetchContactsSuccess = createAction('contacts/fetchSuccess');\nexport const fetchContactsError = createAction('contacts/fetchError');\n\nexport const addContactsRequest = createAction('contacts/addRequest');\nexport const addContactsSuccess = createAction('contacts/addSuccess');\nexport const addContactError = createAction('contacts/addError');\n\nexport const delContactsRequest = createAction('contacts/delRequest');\nexport const delContactsSuccess = createAction('contacts/delSuccess');\nexport const delContactsError = createAction('contacts/delError');\n\nexport const changeContactRequest = createAction(\n  'contacts/changeContactRequest',\n);\nexport const changeContactSuccess = createAction(\n  'contacts/changeContactSuccess',\n);\nexport const changeContactError = createAction('contacts/changeContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from '../../redux/contacts/contacts-actions';\n\nconst contacts = createReducer([], {\n  [actions.fetchContactsSuccess]: (_, { payload }) => payload,\n  [actions.addContactsSuccess]: (state, { payload }) => [...state, payload],\n  [actions.delContactsSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [actions.fetchContactsRequest]: () => true,\n  [actions.fetchContactsSuccess]: () => false,\n  [actions.fetchContactsError]: () => false,\n  [actions.addContactsRequest]: () => true,\n  [actions.addContactsSuccess]: () => false,\n  [actions.addContactError]: () => false,\n  [actions.delContactsRequest]: () => true,\n  [actions.delContactsSuccess]: () => false,\n  [actions.delContactsError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  contacts,\n  loading,\n  filter,\n  error,\n});\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as authActions from './auth-actions';\n\nconst initState = { name: null, email: null };\n\nconst user = createReducer(initState, {\n  [authActions.registrationSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registrationSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registrationError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registrationSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registrationError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\nconst isLoadingUser = createReducer(true, {\n  [authActions.noToken]: () => false,\n\n  [authActions.registrationSuccess]: () => false,\n  [authActions.registrationError]: () => false,\n  [authActions.registrationRequest]: () => true,\n\n  [authActions.loginSuccess]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.loginRequest]: () => true,\n\n  [authActions.getCurrentUserSuccess]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.getCurrentUserRequest]: () => true,\n\n  [authActions.logoutSuccess]: () => false,\n  [authActions.logoutError]: () => false,\n  [authActions.logoutRequest]: () => true,\n});\n\nexport default combineReducers({\n  isLoadingUser,\n  user,\n  isAuthenticated,\n  token,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\nimport authReducer from './auth/auth-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getIsAuthenticated } from '../redux/auth/auth-selectors';\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => {\n  return (\n    <Route\n      {...routeProps}\n      render={props =>\n        isAuthenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={redirectTo} />\n        )\n      }\n    />\n  );\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getIsAuthenticated } from '../redux/auth/auth-selectors';\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => {\n  return (\n    <Route\n      {...routeProps}\n      render={props =>\n        isAuthenticated && routeProps.restricted ? (\n          <Redirect to={redirectTo} />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import { Container } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport * as authOperations from './redux/auth/auth-operations';\nimport { useEffect } from 'react';\nimport { Redirect, Switch } from 'react-router-dom';\nimport { React, lazy, Suspense } from 'react';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport Spinner from './components/Spinner';\nimport { ToastContainer } from 'react-toastify';\n\nimport { getStatusLoadingUser } from './redux/auth/auth-selectors';\n\nconst NavBar = lazy(() =>\n  import('./components/NavigationBar' /* webpackChunkName: \"NavBar\" */),\n);\n\nconst StartPage = lazy(() =>\n  import('./components/StartPage' /* webpackChunkName: \"StartPage\" */),\n);\n\nconst HomePage = lazy(() =>\n  import('./components/Home' /* webpackChunkName: \"HomePage\" */),\n);\n\nconst RegisterPage = lazy(() =>\n  import('./components/RegisterPage' /* webpackChunkName: \"RegisterPage\" */),\n);\n\nconst LoginPage = lazy(() =>\n  import('./components/LoginPage' /* webpackChunkName: \"LoginPage\" */),\n);\n\nfunction App({ onGetCurrentUser, isLoadingUser }) {\n  useEffect(() => {\n    onGetCurrentUser();\n  }, []);\n\n  return (\n    <>\n      <Container maxWidth=\"xs\">\n        <Suspense fallback={<Spinner />}>\n          {/* код что что закоментирован как бе решает проблему с маршрутами, но появляются перезагрузки страниц\n          что как бе вааще не ок */}\n          {/* {isLoadingUser || (\n            <>\n              <NavBar />\n              <Switch>\n                <PublicRoute\n                  exact\n                  path=\"/\"\n                  restricted\n                  redirectTo=\"/home\"\n                  component={StartPage}\n                />\n\n                <PublicRoute\n                  path=\"/register\"\n                  restricted\n                  redirectTo=\"/home\"\n                  component={RegisterPage}\n                />\n\n                <PublicRoute\n                  path=\"/login\"\n                  restricted\n                  redirectTo=\"/home\"\n                  component={LoginPage}\n                />\n\n                <PrivateRoute\n                  path=\"/home\"\n                  redirectTo=\"/login\"\n                  component={HomePage}\n                />\n\n                <Redirect to=\"/\" />\n              </Switch>\n            </>\n          )} */}\n          <NavBar />\n          <Switch>\n            <PublicRoute\n              exact\n              path=\"/\"\n              restricted\n              redirectTo=\"/home\"\n              component={StartPage}\n            />\n\n            <PublicRoute\n              path=\"/register\"\n              restricted\n              redirectTo=\"/home\"\n              component={RegisterPage}\n            />\n\n            <PublicRoute\n              path=\"/login\"\n              restricted\n              redirectTo=\"/home\"\n              component={LoginPage}\n            />\n\n            <PrivateRoute\n              path=\"/home\"\n              redirectTo=\"/login\"\n              component={HomePage}\n            />\n\n            <Redirect to=\"/\" />\n          </Switch>\n          <ToastContainer\n            position=\"top-right\"\n            autoClose={2000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n          />\n        </Suspense>\n      </Container>\n    </>\n  );\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nconst mapStateToProps = state => ({\n  isLoadingUser: getStatusLoadingUser(state),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n// import { BrowserRouter as Router } from 'react-router-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n\n  document.getElementById('root'),\n);\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUsername = state => state.auth.user.name;\n\nconst getError = state => state.auth.error;\n\nconst getStatusLoadingUser = state => state.auth.isLoadingUser;\n\nexport { getIsAuthenticated, getUsername, getError, getStatusLoadingUser };\n","import { createAction } from '@reduxjs/toolkit';\n\nconst registrationRequest = createAction('auth/registrationRequest');\nconst registrationSuccess = createAction('auth/registrationSuccess');\nconst registrationError = createAction('auth/registrationError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nconst noToken = createAction('auth/noToken');\n\nexport {\n  registrationRequest,\n  registrationSuccess,\n  registrationError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n  noToken,\n};\n","import axios from 'axios';\nimport * as authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registrationRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registrationSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registrationError(error.message));\n  }\n};\n\nconst login = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post('/users/login', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\nconst logout = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    const response = await axios.post('/users/logout');\n\n    token.unset();\n    dispatch(authActions.logoutSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    dispatch(authActions.noToken());\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nexport { register, login, logout, getCurrentUser };\n","import Loader from 'react-loader-spinner';\nimport styles from './styles.module.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nfunction Spinner() {\n  return (\n    <Loader\n      className={styles.spinner}\n      type=\"Puff\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n    />\n  );\n}\n\nexport default Spinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"styles_spinner__34F6p\"};"],"sourceRoot":""}